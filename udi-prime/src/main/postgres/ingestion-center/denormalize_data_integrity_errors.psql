
-- Purpose: Back fill the 'data_integrity' errors into sat_csv_fhir_processing_errors table

-- data_integrity errors
INSERT INTO techbd_udi_ingress.sat_csv_fhir_processing_errors (
            sat_validation_and_fhir_conversion_errors_id, category, flat_file_hub_interaction_id, created_at, tenant_id, uri, 
            zip_file_hub_interaction_id, group_id, section, field_name, value, error_type, error_subtype, error, description, 
            row_number, field_number, zip_file_name, file_name, origin, user_agent, created_by, provenance, techbd_version_number)
    WITH latest_interactions AS (
        SELECT hub_interaction_id
        FROM (
            SELECT DISTINCT r.hub_interaction_id, r.created_at
            FROM techbd_udi_ingress.sat_interaction_flat_file_csv_request r
            WHERE r.hub_interaction_id NOT IN (
                SELECT e.flat_file_hub_interaction_id
                FROM techbd_udi_ingress.sat_csv_fhir_processing_errors e
                WHERE e.flat_file_hub_interaction_id IS NOT NULL
                AND category = 'data_integrity'
            )
            AND r.nature = 'CSV Validation Result'
        ) t
        ORDER BY t.created_at DESC
    )
    SELECT gen_random_uuid()::text,
            'data_integrity',
            req.hub_interaction_id, --flat_file_hub_interaction_id
            req.created_at,
            req.tenant_id,
            req.uri,
            req.zip_file_hub_interaction_id,
            req.group_id,
            tasks.value ->> 'name' AS section,
            coalesce(error_payload.value ->> 'fieldName', errors_summary.value ->> 'fieldName') AS field_name,
            error_payload.value ->> 'cell' AS value,
            coalesce(error_payload.value ->> 'title', errors_summary.value ->> 'type') AS error_type,
            NULL,
            coalesce(error_payload.value ->> 'message', errors_summary.value ->> 'message') AS error,
            error_payload.value ->> 'description' AS description,
            (error_payload.value ->> 'rowNumber')::integer AS row_number,
            (error_payload.value ->> 'fieldNumber')::integer AS field_number,
            zip.csv_zip_file_name,
            CASE
                WHEN tasks.value ->> 'name' = 'qe_admin_data' THEN orig.qe_admin_data_file_name
                WHEN tasks.value ->> 'name' = 'demographic_data' THEN orig.demographic_data_file_name
                WHEN tasks.value ->> 'name' = 'screening_observation_data' THEN orig.screening_observation_data_file_name
                WHEN tasks.value ->> 'name' = 'screening_profile_data' THEN orig.screening_profile_data_file_name
                ELSE NULL
            END AS file_name,
            zip.origin,
            COALESCE(zip.user_agent, orig.user_agent), 
            CURRENT_USER, 
            'CSV', 
            req.techbd_version_number 
    FROM latest_interactions li
    JOIN techbd_udi_ingress.sat_interaction_flat_file_csv_request req ON req.hub_interaction_id = li.hub_interaction_id
    LEFT JOIN techbd_udi_ingress.sat_interaction_flat_file_csv_request orig ON orig.hub_interaction_id = req.hub_interaction_id AND orig.nature = 'Original Flat File CSV'
    CROSS JOIN LATERAL jsonb_array_elements(((req.validation_result_payload -> 'validationResults') -> 'report') -> 'tasks') tasks(value)
    LEFT JOIN LATERAL jsonb_array_elements(tasks.value -> 'errors') error_payload(value) ON true
    LEFT JOIN LATERAL jsonb_array_elements((req.validation_result_payload -> 'validationResults') -> 'errorsSummary') errors_summary(value) ON TRUE
    INNER JOIN techbd_udi_ingress.sat_interaction_zip_file_request AS zip ON zip.hub_interaction_id = req.zip_file_hub_interaction_id
    WHERE req.nature = 'CSV Validation Result'
        AND (
            ((((req.validation_result_payload -> 'validationResults') -> 'report') -> 'stats') ->> 'errors')::integer > 0
            OR jsonb_array_length((req.validation_result_payload -> 'validationResults') -> 'errorsSummary') > 0
            )
        AND coalesce(error_payload.value ->> 'title', errors_summary.value ->> 'type') IS NOT NULL;




--SELECT count(*) AS data_integrity_errors FROM techbd_udi_ingress.sat_csv_fhir_processing_errors WHERE category = 'data_integrity';

-- Update sat_csv_fhir_processing_errors table to fill missing fields for 'data_integrity' and 'incomplete_groups' error
WITH latest_interactions AS (
    SELECT flat_file_hub_interaction_id
    FROM techbd_udi_ingress.sat_csv_fhir_processing_errors
    WHERE category IN ('data_integrity', 'incomplete_groups')
      AND (user_agent IS NULL OR file_name IS NULL OR zip_file_name IS NULL OR origin IS NULL)
),
validation_tasks AS (
    SELECT
        req.hub_interaction_id,
        req.zip_file_hub_interaction_id,
        req.validation_result_payload,
        tasks.value ->> 'name' AS task_name
    FROM techbd_udi_ingress.sat_interaction_flat_file_csv_request req
    CROSS JOIN LATERAL jsonb_array_elements(
        ((req.validation_result_payload -> 'validationResults') -> 'report') -> 'tasks'
    ) tasks(value)
    WHERE req.nature = 'CSV Validation Result'
      AND (
            ((((req.validation_result_payload -> 'validationResults') -> 'report') -> 'stats') ->> 'errors')::int > 0
         OR jsonb_array_length((req.validation_result_payload -> 'validationResults') -> 'errorsSummary') > 0
      )
)
UPDATE techbd_udi_ingress.sat_csv_fhir_processing_errors err
SET
    user_agent = COALESCE(err.user_agent, zip.user_agent, orig.user_agent),
    zip_file_name = COALESCE(err.zip_file_name, zip.csv_zip_file_name),
    origin = COALESCE(err.origin, zip.origin),
    file_name = COALESCE(
        err.file_name,
        CASE vt.task_name
            WHEN 'qe_admin_data' THEN orig.qe_admin_data_file_name
            WHEN 'demographic_data' THEN orig.demographic_data_file_name
            WHEN 'screening_observation_data' THEN orig.screening_observation_data_file_name
            WHEN 'screening_profile_data' THEN orig.screening_profile_data_file_name
            ELSE NULL
        END
    )
FROM latest_interactions li
JOIN validation_tasks vt ON li.flat_file_hub_interaction_id = vt.hub_interaction_id
LEFT JOIN techbd_udi_ingress.sat_interaction_flat_file_csv_request orig ON orig.hub_interaction_id = vt.hub_interaction_id AND orig.nature = 'Original Flat File CSV'
JOIN techbd_udi_ingress.sat_interaction_zip_file_request zip ON zip.hub_interaction_id = vt.zip_file_hub_interaction_id
WHERE err.flat_file_hub_interaction_id = vt.hub_interaction_id
  AND err.category IN ('data_integrity', 'incomplete_groups')
  AND (err.user_agent IS NULL OR err.file_name IS NULL OR err.zip_file_name IS NULL OR err.origin IS NULL);
